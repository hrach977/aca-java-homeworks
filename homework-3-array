import java.util.Scanner;


public class HomeworkArray {

	public static void main(String[] args) {
		// Exercise 1
		//Write a program to read the numbers from input till the user wants
		//(user will choose to continue via y/n answers)and at the end the program 
		//should display the largest and smallest numbers entered.
		Scanner in = new Scanner(System.in);
		
		
		//Exercise 2
		//Write a program to print out all Armstrong numbers between 1 and 500. If sum of cubes of each 
		//digit of the number is equal to the number itself, then the number is called an Armstrong number.
		int forLoop = 0 ;
		int forSum = 0 ;
		int sumOfSymbol = 0;
		System.out.println("It is Amstrong numbers ");
		for(int i = 1; i <= 500; i++){
			forLoop = i;
			sumOfSymbol = 0;
			while(forLoop != 0){
				forLoop /= 10;
				sumOfSymbol++;
			}
				forLoop = i ;
				forSum = 0;
			while(forLoop != 0){
				forSum += (int) Math.pow((forLoop % 10), sumOfSymbol);
				forLoop /= 10;
			}
				if(forSum == i){
					System.out.print( i + ", ");
				}		
		}
		System.out.print( "\n ");
		
		//Exercise 3
		//Write a program to print Fibonacci series of n terms, where n is input by user.
		//System.out.println("Enter the integer please");
		//int numN = in.nextInt();
		System.out.println("Enter how much Fibonacci's number you would like to see");
		int lengthOfArrayEx3 = in.nextInt();
		int[] fibArray = new int[lengthOfArrayEx3];
		fibArray[0] = 0;
		fibArray[1]= 1;
		for(int i = 2; i < fibArray.length; i++ ){
			fibArray[i] = fibArray[i-1] + fibArray[i-2];
		}
		System.out.println("It is Fibonacci's numbers ");
		for(int i = 0; i < fibArray.length; i++){
			System.out.print(fibArray[i] + ", ");
		}
		System.out.print( "\n ");
		
		//Exercise 4
		//Write a program to calculate the sum of the following series, where n is input by user:
		
		System.out.println("Enter the integer please");
		int numFromUser = in.nextInt();
		double numerInDouble = 1.0;
		double numForIncrement = 1.0 ;
		int a = 1;
		for(int i = 1; i < numFromUser; i++){
			a++;
			numerInDouble += (numForIncrement/a);
			
		}
		System.out.println(numerInDouble);
		
		
		
		//Exercise 5
		//Compute the natural logarithm of 2, by adding up to n terms in the series:
		int userNumber;
		first:
		while(true){
			System.out.println("Enter the positive integer");
			userNumber = in.nextInt();
			if(userNumber <= 0){
				System.out.println("It is not positive integer think better");
				continue first;
			}else{
				break;
			}
		}
		double firstDouble = 1.0;
		double secondDouble = 1.0;
		int b = 1;
		for(int i = 1; i < userNumber; i++ ){
			b++;
			if(b % 2 == 0){
				firstDouble -= (secondDouble/b);
			}else{
				firstDouble += (secondDouble/b);
			}
		}
		System.out.println(firstDouble);
		
		//Exercise 6
		//Given an array of ints, output true if the array contains no 1’s and no 3’s.
		System.out.println("Enter please how much integer you are going to input");
		int theLengthOfArray = in.nextInt();
		int[] incolection = new int[theLengthOfArray];
		int regNum = 1;
		boolean checkValue = true; 
		for(int i = 0; i < theLengthOfArray; i++){
			System.out.println("Please enter the " + regNum + " integer");
			incolection[i] = in.nextInt();
			regNum++;
		}
		for(int i = 0; i < theLengthOfArray; i++){
			if((incolection[i] == 1) || (incolection[i] == 3)){
				System.out.println("False");
				checkValue = false;
				break;
			}	
		}
		if(checkValue){
			System.out.println("True");
		}

		//Exercise 7
		//Given an array construct another array that is the original array “left shifted” by one.
		//So, assuming the original array was {6, 2, 5, 3}, you should construct {2, 5, 3, 6}.
		
		int[] arrayOne = {6,2,5,3};
		int[] arrayTwo = new int[arrayOne.length];
		System.arraycopy(arrayOne,1, arrayTwo, 0 , arrayOne.length-1);
		arrayTwo[arrayTwo.length-1] = arrayOne[0];
		for(int i = 0; i < arrayOne.length; i++ ){
			System.out.println(arrayTwo[i]);
		}
		
		
		//Exercise 8
		//Solve Exercise 7 without constructing a new array. Just modify the original one.
		
		int[] arrayForEx8 = {6, 2, 5, 3};
		int forEndElementEx8 = arrayForEx8.length-1;
		int elementForEx8 = arrayForEx8[0];
		for(int i = 1; i < arrayForEx8.length; i++){
			arrayForEx8[i-1] = arrayForEx8[i];
		}
		arrayForEx8[forEndElementEx8] = elementForEx8;
		for(int i = 0; i < arrayForEx8.length; i++){
			System.out.println(arrayForEx8[i]);
		}
	
	     
		//Exercise 9
		//Given an array of ints, output true if every element is a ‘1’ or a ‘4’.
		//NOTE: an empty array has no elements, so the result should be true in that case.
		int[] array9 = {4,4,4,4,4,4,1};
		boolean checker = true;
		boolean chekerTwo = true;
		for(int i = 0; i < array9.length; i++){
			if(array9.length != 0){
					first:
				if(array9[i] != 1){
					checker = false;
					break first;
				}
					second:
				if(array9[i] != 4){
					chekerTwo = false;
					break second;
				}
			}else{
				break;
			}	
		}
		if(checker || chekerTwo){
			System.out.println("True");
		}else{
			System.out.println("False");
		}
		
		//Exercise 10
		//Given two arrays of ints of the same length, 
		//for every element in the first array consider the corresponding element 
		//in the second array (i.e. at the same index). Output the count of the number 
		//of times that the two elements differ by 2 or less, but are not equal.
		
		int[] one = new int[5];
		int[] two = new int[5];
		int nomer = 1;
		int howMuchIntIsDiffer = 0;
		for(int i = 0; i < one.length; i++){
			System.out.println("Enter please the " + nomer + " ellement in first array");
			one[i] = in.nextInt();
			nomer++;
		}
		nomer = 1;
		for(int i = 0; i < two.length; i++){
			System.out.println("Enter please the " + nomer + " ellement in second array");
			two[i] = in.nextInt();
			nomer++;
		}
		for(int i = 0; i < one.length; i++){
				if( (one[i] - two[i] <= 2) && (one[i] - two[i] >= -2) && (one[i] != two[i]) ){
					howMuchIntIsDiffer++;
				}
		}
		System.out.println("There are " + howMuchIntIsDiffer + " elements on same position in arrays how not bigger or smaller each other than 2 ");
	
		
	/*	//Exercise 11
		//Given an array length 1 or more of ints, 
		//output the difference between the largest and smallest values in the array.
    //do not finished
		System.out.println("Enter the length of array");
		int lenForArrayEx11 = in.nextInt();
		int[] firstArrayForEx11 = new int[lenForArrayEx11];
		int[] secondArrayForEx11 = new int[lenForArrayEx11];
		int enumForEx11 = 0;
		for(int i = 0; i < secondArrayForEx11.length; i++){
			System.out.println("Enter the integer");
			firstArrayForEx11[i] = in.nextInt();
		}
		for(int i = 1; i < secondArrayForEx11.length; i++){
			for(int j = 0; j < secondArrayForEx11.length; j++){
				if(firstArrayForEx11[i] < firstArrayForEx11[j]){
					secondArrayForEx11[i] = firstArrayForEx11[i];
				}
			}
			System.out.println(secondArrayForEx11[i]);
		}*/
		
			
		//Exercise 12 
		//Given an array of ints,
		//output true if the sum of all the ‘2’-s in the array is exactly ‘8’.
		System.out.println("Enter the array length");
		int lengthArrayForEx12 = in.nextInt();
		int forSumEx12 = 0;
		int[] arrayForEx12 = new int[lengthArrayForEx12];
		for(int i = 0; i < arrayForEx12.length; i++){
			System.out.println("Enter the number");
			arrayForEx12[i] = in.nextInt();
			if(arrayForEx12[i] == 2){
				forSumEx12 += 2;
			}
		}
		if(forSumEx12 == 8){
			System.out.println("True");
		}else{
			System.out.println("False");
		}
		
		
		//Exercise 13
		//Write a program to reverse the elements of an integer array (1 dimensional).
		System.out.println("Enter the length of arrays");
		int lengthForArraysEx13 = in.nextInt();
		int[] firstArrayForEx13 = new int[lengthForArraysEx13];
		int[] secondArrayForEx13 = new int[lengthForArraysEx13];
		int enumForEx13 = lengthForArraysEx13-1;
		for(int i = 0; i < firstArrayForEx13.length; i++){
			System.out.println("Enter the integer please");
			firstArrayForEx13[i] = in.nextInt();
		}
		for(int i = 0; i < firstArrayForEx13.length; i++){
			secondArrayForEx13[enumForEx13] = firstArrayForEx13[i];
			enumForEx13--;
		}
		for(int i = 0; i < firstArrayForEx13.length; i++){
			System.out.println(secondArrayForEx13[i]);
		}
		
		
		//Exercise 14
        //Write a program to find and print the common elements between two arrays of integers.
		System.out.println("Enter the arrays length");
		int arraysLengthForEx14 = in.nextInt();
		int[] firstArrayForEx14 = new int[arraysLengthForEx14];
		int[] secondArrayForEx14 = new int[arraysLengthForEx14];
		int forNumEx14 = 1;
		for(int i = 0; i < firstArrayForEx14.length; i++ ){
			System.out.println("Enter the first array elements");
			firstArrayForEx14[i] = in.nextInt();
		}
		for(int i = 0; i < secondArrayForEx14.length; i++ ){
			System.out.println("Enter the second array elements");
			secondArrayForEx14[i] = in.nextInt();
		}
		for(int i = 0; i < secondArrayForEx14.length; i++ ){
			for(int j = 0; j < secondArrayForEx14.length; j++){
				if(firstArrayForEx14[i] == secondArrayForEx14[j]){
					System.out.println(forNumEx14 + ": " + firstArrayForEx14[i]);
					forNumEx14++;
				}
			}
		}
		
	}

}
